<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_307427_table_a_0.anonymizerUtil</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>anonymizerUtil</name>
        <script><![CDATA[var anonymizerUtil = Class.create();
anonymizerUtil.prototype = {
    initialize: function() {
    },
	
	/**
	RegEx String patterns definitions ...
	*/
	EMAIL: '([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})',
	PHONE: '\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*',
	ADDRESS: '[#.0-9a-zA-Z\\s,-]+',
	
	
	getpatterns:function(patternGr){
		var trgPatterns= [];
		var patterns= patternGr.getValue("target") && patternGr.getValue("target").split(",").length 
		? patternGr.getValue("target").split(",")
		: [];
		
		var pRgx;
		
		if(patterns.length){
			if (patterns.indexOf("email") != -1) trgPatterns.push(this.EMAIL);
			if (patterns.indexOf("phone") != -1) trgPatterns.push(this.PHONE);
			if (patterns.indexOf("address") != -1) trgPatterns.push(this.ADDRESS);
		}

		return {algorithm: patternGr.getValue("algorithm"), regEx: trgPatterns};
	},
	
	getTargetFields:function(table){
		var supportedFieldTypes= gs.getProperty("x_307427_table_a_0.supported.Internal.field.type").split(",") || ["string"] /*minimum by default*/;
		
		var fieldsType=[];
		var recObj = new GlideRecord(table);
		recObj.setLimit(1);
		recObj.query();
		if(recObj.next()){
			for (var key in recObj) {
				if(recObj[key] && recObj[key] != ""){
					var type = recObj.getElement(key).getED().getInternalType();
					if(supportedFieldTypes.indexOf(type) != -1) {
						//gs.info('Attribute Name : '+key +' Value : '+recObj[key]);
						fieldsType.push(key);
					}
				}
			}
		}
		return fieldsType;
	},

	anonymize:function(configGr){
		configGr.processing= true;
		configGr.update();
		
		var that= this;
		var table= configGr.getValue("table");
		var q= configGr.getValue("filter");
		var fields= this.getTargetFields(table);
		var patternGr= configGr.patterns.getRefRecord();
		var patternConfig= this.getpatterns(patternGr);
		var patternAlgo= patternConfig.algorithm;
		var patternRegxStr= patternConfig.regEx.join("|");
		var rgx= new RegExp(patternRegxStr, 'gm');
		var digest = new GlideDigest();
		var fnCrypto= "getMD5Base64"; //by default.
		
		if(patternAlgo == "sha"){
			fnCrypto= "getSHA1Base64";
		} else if(patternAlgo == "sha256"){
			fnCrypto= "getSHA256Base64";
		}

		var historyGr= new GlideRecord("x_307427_table_a_0_history");
		var rec = new GlideRecord(table);
		rec.addEncodedQuery(q);
		rec.query();
		while(rec.next()){
			/*rec.autoSysFields(false);
			rec.setWorkflow(false);*/
			fields.forEach(function(field){
				if(rgx.test(rec[field])){
					var findings= rec[field].match(rgx);
					findings.length && findings.forEach(function(match){
						match= match.replace(/\+/gm, "\\+");
						//gs.info(match)
						var ndata= rec[field].replace(new RegExp(match, 'gm'), digest[fnCrypto](match));
						rec.setValue(field, ndata);
						rec.update();

						if(rec.isValidRecord() && !that.hasIt(configGr.sys_id, table, field, rec.sys_id)) {
							historyGr.initialize();
							historyGr.anonymizer= configGr.sys_id;
							historyGr.table= table;
							historyGr.field= field;
							historyGr.record= rec.sys_id;
							historyGr.status= "anonymized";
							historyGr.insert();
						}
					});
				}
			});
		}
		
		configGr.processing= false;
		configGr.update();
	},
	
	canClearHistory:function(configGr){
		var rec = new GlideRecord("x_307427_table_a_0_history");
		rec.addEncodedQuery("anonymizer=" + configGr.sys_id +"^status=anonymized");
		rec.query();
		if(rec.next()){
			return true;
		}
		return false;
	},
	
	canClearTable:function(configGr){
		var rec = new GlideRecord("x_307427_table_a_0_history");
		rec.addEncodedQuery("anonymizer=" + configGr.sys_id);
		rec.query();
		if(rec.next()){
			return true;
		}
		return false;
	},
	
	clearTable:function(configGr){
		var rec = new GlideRecord("x_307427_table_a_0_history");
		rec.addEncodedQuery("anonymizer=" + configGr.sys_id);
		rec.query();
		rec.deleteMultiple();
	},
	
	
	hasIt:function(anonymizer, table, field, recordId){
		var rec = new GlideRecord("x_307427_table_a_0_history");
		rec.addEncodedQuery("anonymizer="+anonymizer+"^field="+field+"^table="+table+"^record="+recordId +"^status=anonymized");
		rec.query();
		if(rec.next()){
			return true;
		}
		return false;
	},
	
	deleteHistoryLine:function(field, recordId){
		var rec = new GlideRecord('sys_history_line');
		rec.addEncodedQuery('field='+field+'^set.id='+recordId);
		rec.query();
		rec.deleteMultiple();
	},
	
	deleteHistoryAudit:function(table, field, recordId){
		var rec = new GlideRecord('sys_audit');
		rec.addEncodedQuery('tablename='+table+'^fieldname='+field+'^documentkey='+recordId);
		rec.query();
		rec.deleteMultiple();
	},
	
	deleteAll:function(configGr){
		configGr.processing= true;
		configGr.update();
		
		var rec = new GlideRecord("x_307427_table_a_0_history");
		rec.addEncodedQuery("anonymizer=" + configGr.sys_id +"^status=anonymized");
		rec.query();
		while(rec.next()){
			this.deleteHistoryAudit(rec.table, rec.field, rec.record);
			this.deleteHistoryLine(rec.field, rec.record);
			rec.status= "deleted";
			rec.update();
		}
		
		configGr.processing= false;
		configGr.update();
	},
	
    type: 'anonymizerUtil'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-07-02 11:55:34</sys_created_on>
        <sys_id>5a237b3397501110e300d200f153afe7</sys_id>
        <sys_mod_count>112</sys_mod_count>
        <sys_name>anonymizerUtil</sys_name>
        <sys_package display_value="Table Anonymizer" source="x_307427_table_a_0">167a237797101110e300d200f153af12</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Table Anonymizer">167a237797101110e300d200f153af12</sys_scope>
        <sys_update_name>sys_script_include_5a237b3397501110e300d200f153afe7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-07-03 10:33:44</sys_updated_on>
    </sys_script_include>
</record_update>
